name: CI

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout代码
      uses: actions/checkout@v4
      
    - name: 设置 JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'gradle'
        
    - name: 授予 Gradle 执行权限
      run: chmod +x ./gradlew
      
    - name: 构建项目
      run: ./gradlew build --stacktrace
      
    - name: 运行单元测试
      run: ./gradlew test --continue
      
    - name: 运行 Lint 检查
      run: ./gradlew lint
      
    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-artifacts
        path: |
          **/build/outputs/
          **/build/reports/
        retention-days: 7
        
    - name: 上传测试报告
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: |
          **/build/reports/tests/
        retention-days: 7
        
    - name: 发布测试结果
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          **/build/test-results/**/*.xml

  lint:
    name: Lint 检查
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout 代码
      uses: actions/checkout@v4
      
    - name: 设置 JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'gradle'
        
    - name: 授予 Gradle 执行权限
      run: chmod +x ./gradlew
      
    - name: 运行 Android Lint
      run: ./gradlew lintDebug
      
    - name: 上传 Lint 报告
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-reports
        path: |
          **/build/reports/lint-*.html
        retention-days: 7

  code-quality:
    name: 代码质量检查
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout 代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 需要完整历史用于 SonarQube 分析
        
    - name: 设置 JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'gradle'
        
    - name: 授予 Gradle 执行权限
      run: chmod +x ./gradlew
      
    - name: 编译项目
      run: ./gradlew assembleDebug
      
    # 可选：如果配置了 SonarQube
    # - name: SonarQube 分析
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #   run: ./gradlew sonarqube

  dependency-check:
    name: 依赖安全检查
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout 代码
      uses: actions/checkout@v4
      
    - name: 设置 JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'gradle'
        
    - name: 授予 Gradle 执行权限
      run: chmod +x ./gradlew
      
    - name: 检查依赖更新
      run: ./gradlew dependencyUpdates
      continue-on-error: true

